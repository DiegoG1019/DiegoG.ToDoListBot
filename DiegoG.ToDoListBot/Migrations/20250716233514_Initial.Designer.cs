// <auto-generated />
using System;
using DiegoG.ToDoListBot.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DiegoG.ToDoListBot.Migrations
{
    [DbContext(typeof(ToDoListDbContext))]
    [Migration("20250716233514_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.7");

            modelBuilder.Entity("DiegoG.ToDoListBot.Data.ChatConfig", b =>
                {
                    b.Property<long>("ChatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<TimeSpan>("UtcOffset")
                        .HasColumnType("TEXT");

                    b.HasKey("ChatId");

                    b.ToTable("ChatConfigs");
                });

            modelBuilder.Entity("DiegoG.ToDoListBot.Data.ToDoList", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("ChatId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CronExpression")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ChatId");

                    b.ToTable("ToDoLists");
                });

            modelBuilder.Entity("DiegoG.ToDoListBot.Data.ToDoListTask", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<long>("ToDoListId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ToDoListId");

                    b.ToTable("ToDoTasks");
                });

            modelBuilder.Entity("GLV.Shared.ChatBot.EntityFramework.ConversationContextPacked", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ActiveAction")
                        .HasColumnType("TEXT");

                    b.Property<string>("AssemblyQualifiedContextTypeName")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ConversationId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Encoding")
                        .HasColumnType("TEXT");

                    b.Property<string>("JsonData")
                        .HasColumnType("TEXT");

                    b.Property<long>("Step")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ActiveAction");

                    b.HasIndex("AssemblyQualifiedContextTypeName");

                    b.HasIndex("ConversationId")
                        .IsUnique();

                    b.ToTable("ConversationContexts");
                });

            modelBuilder.Entity("DiegoG.ToDoListBot.Data.ToDoList", b =>
                {
                    b.HasOne("DiegoG.ToDoListBot.Data.ChatConfig", "ChatConfig")
                        .WithMany("Lists")
                        .HasForeignKey("ChatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChatConfig");
                });

            modelBuilder.Entity("DiegoG.ToDoListBot.Data.ToDoListTask", b =>
                {
                    b.HasOne("DiegoG.ToDoListBot.Data.ToDoList", "ToDoList")
                        .WithMany("Tasks")
                        .HasForeignKey("ToDoListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ToDoList");
                });

            modelBuilder.Entity("DiegoG.ToDoListBot.Data.ChatConfig", b =>
                {
                    b.Navigation("Lists");
                });

            modelBuilder.Entity("DiegoG.ToDoListBot.Data.ToDoList", b =>
                {
                    b.Navigation("Tasks");
                });
#pragma warning restore 612, 618
        }
    }
}
